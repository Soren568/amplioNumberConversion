import Head from 'next/head'
import Image from 'next/image'
import axios from 'axios'
import { useState } from 'react'

export default function Home() {
  const [value, setValue] = useState()
  const [type, setType] = useState('roman')
  const [errorMsg, setErrorMsg] = useState()
  const [result, setResult] = useState();

  const handleSubmit = e => {
    // Prevent page refresh
    e.preventDefault()
    // check that there is a value in the input
    if (!value || value.trim().length === 0) {
      setErrorMsg("Please enter a value")
      return
    }
    // send information to backend for conversion
    axios.post("/api/convert", { value, type })
      .then(res => setResult(res.data.converted))
      .catch(err => setErrorMsg(err.response.data.errMsg))
  }

  return (
    <div className="w-screen h-screen bg-gray-50">
      <Head>
        <title>Amplio Number Conversion</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="h-5/6 flex flex-col align-middle text-center pt-20">
        <h1 className='text-5xl font-bold text-blue-500 '>Convert your number!</h1>
        <form onSubmit={(e) => handleSubmit(e)} className='px-4 py-3 w-1/2 self-center mt-5 '>

          <div className='flex justify-between text-center mb-3'>
            <label className='self-center'>Pick which you want to convert to: </label>
            <select onChange={e => setType(e.target.value)} className='inputStyle' >
              <option value="roman">Roman</option>
              <option value="integer">Integer</option>
            </select>
          </div>

          <div className='flex justify-between text-center'>
            <label className='self-center'>Enter your number here: </label>
            <input onChange={e => { setValue(e.target.value); setErrorMsg() }} type="text" name="value" id="" className={errorMsg ? 'bg-gray-50 rounded-md border border-red-200 w-24 p-1' : 'inputStyle'} />
          </div>
          {errorMsg ? <p className='errorText'>{errorMsg}</p> : null}

          <div className='w-full flex justify-between mt-3'>
            <p className='self-center '>Result: <span className='text-blue-500 text-lg'>{result}</span></p>
            <button className="btn" type="submit">Convert</button>
          </div>
        </form>
      </main>

      <footer className="text-center text-sm">
        Soren Heitmann - Amplio Coding Challenge
      </footer>
    </div >
  )
}
